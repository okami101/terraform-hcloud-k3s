#
# Use next lines to enable public load balancer for your workers.
#

resource "hcloud_load_balancer" "public" {
  name               = "public"
  load_balancer_type = "lb11"
  location           = "nbg1"
}

resource "hcloud_load_balancer_network" "public" {
  load_balancer_id = hcloud_load_balancer.public.id
  network_id       = module.hcloud_k3s.network_id
  ip               = "10.0.0.100"
}

resource "hcloud_load_balancer_target" "public" {
  for_each         = { for i, t in module.hcloud_k3s.worker_ids.worker : t => i }
  type             = "server"
  load_balancer_id = hcloud_load_balancer.public.id
  server_id        = each.key
  use_private_ip   = true

  depends_on = [
    hcloud_load_balancer_network.public
  ]
}

resource "hcloud_load_balancer_service" "ssh_service" {
  load_balancer_id = hcloud_load_balancer.public.id
  protocol         = "tcp"
  listen_port      = 22
  destination_port = 22
}

resource "hcloud_load_balancer_service" "http_service" {
  load_balancer_id = hcloud_load_balancer.public.id
  protocol         = "tcp"
  listen_port      = 80
  destination_port = 80
}

resource "hcloud_load_balancer_service" "https_service" {
  load_balancer_id = hcloud_load_balancer.public.id
  protocol         = "tcp"
  listen_port      = 443
  destination_port = 443
  proxyprotocol    = true
}

#
# Use next lines if you plan to use certificates directly managed by Hetzner
# This will replace above http_service as well as https_service
#

# resource "hcloud_managed_certificate" "example" {
#   name         = "example"
#   domain_names = ["*.example.com", "example.com"]
# }

# resource "hcloud_load_balancer_service" "https_service" {
#   load_balancer_id = hcloud_load_balancer.public.id
#   protocol         = "https"
#   listen_port      = 443
#   destination_port = 80
#   proxyprotocol    = true
#   http {
#     redirect_http = true
#     certificates  = [hcloud_managed_certificate.example.id]
#   }
#   health_check {
#     protocol = "http"
#     interval = 15
#     port     = 80
#     timeout  = 10
#     http {
#       status_codes = ["404"]
#       path         = "/"
#     }
#   }
# }

#
# Use next lines to enable dedicated load balancer for controllers when HA mode.
#

resource "hcloud_load_balancer" "controller" {
  name               = "controller"
  load_balancer_type = "lb11"
  location           = "nbg1"
}

resource "hcloud_load_balancer_network" "controller" {
  load_balancer_id = hcloud_load_balancer.controller.id
  network_id       = module.hcloud_k3s.network_id
  ip               = "10.0.0.200"
}

resource "hcloud_load_balancer_target" "controller" {
  for_each         = { for i, t in module.hcloud_k3s.controller_ids : t => i }
  type             = "server"
  load_balancer_id = hcloud_load_balancer.controller.id
  server_id        = each.key
  use_private_ip   = true

  depends_on = [
    hcloud_load_balancer_network.controller
  ]
}

resource "hcloud_load_balancer_service" "kube_service" {
  load_balancer_id = hcloud_load_balancer.controller.id
  protocol         = "tcp"
  listen_port      = 6443
  destination_port = 6443
}
